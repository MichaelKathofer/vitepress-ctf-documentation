import{_ as e,c as o,o as t,a as n}from"./app.04712131.js";const m='{"title":"Proof of Concept","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation documentation Step by Step","slug":"installation-documentation-step-by-step"},{"level":3,"title":"Solution 1","slug":"solution-1"},{"level":3,"title":"Solution 2","slug":"solution-2"}],"relativePath":"proofOfConcept.md","lastUpdated":1633409347767}',i={},a=n(`__VP_STATIC_START__<h1 id="proof-of-concept" tabindex="-1">Proof of Concept <a class="header-anchor" href="#proof-of-concept" aria-hidden="true">#</a></h1><h2 id="installation-documentation-step-by-step" tabindex="-1">Installation documentation Step by Step <a class="header-anchor" href="#installation-documentation-step-by-step" aria-hidden="true">#</a></h2><h3 id="solution-1" tabindex="-1">Solution 1 <a class="header-anchor" href="#solution-1" aria-hidden="true">#</a></h3><p>You can clone the repo, manually install its dependencies using pip on your server, and also configure MySQL and Redis databases manually.</p><ol><li><p>Cloning git repository with</p><div class="language-bash"><pre><code><span class="token function">git</span> clone https://github.com/CTFd/CTFd.git

</code></pre></div></li><li><p>Opened the project in vs code</p></li><li><p>Opened a terminal in VS code</p></li><li><div class="language-bash"><pre><code>pip <span class="token function">install</span> -r requirements.txt

</code></pre></div></li></ol><div class="danger custom-block"><p class="custom-block-title">Error</p><p>ERROR: Could not find a version that satisfies the requirement cmarkgfm==0.5.0 (from versions: 0.1.0al, 0.1.0a2, 0.1.0, ...) ERROR: No matching distribution found for cmarkgfm==0.5.0</p></div><ol start="5"><li><p>Changing the \`cmarkgfm\xB4 version to 0.6.0 in the config file fixed it.</p></li><li><div class="language-bash"><pre><code>python serve.py

</code></pre></div></li></ol><p>=&gt; This command to switches into debugging mode</p><div class="danger custom-block"><p class="custom-block-title">Error</p><ul><li>Importing gevent and monkey patching. Use -disable-gevent to disable. Traceback (most recent call last) : File &quot;<a href="http://serve.py" target="_blank" rel="noopener noreferrer">serve.py</a>&quot; line 16, in module&gt; from gevent import monkey ImportError: No module named gevent</li></ul></div><ol start="7"><li><div class="language-bash"><pre><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python3-gevent
</code></pre></div></li></ol><p>=&gt; Then tried step 6) again.</p><h3 id="solution-2" tabindex="-1">Solution 2 <a class="header-anchor" href="#solution-2" aria-hidden="true">#</a></h3><p>You can use the docker-compose.yml file present on the CTFd repo to conveniently deploy each component on your server in separate containers.</p><ol><li>Install Docker and Docker Compose.</li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>There is no need to download Docker Compose if you download the Desktop Application. It is already included in there.</p></div><ol start="2"><li><p>Cloning git repository with</p><div class="language-bash"><pre><code><span class="token function">git</span> clone https://github.com/CTFd/CTFd.git

</code></pre></div></li><li><p>Modify the &#39;docker-compose.yml&#39; file to your liking. It includes options to name a existing Database URL.</p></li><li><p>Official documentation page suggested &quot;docker-compose up&quot;. This lead to errors and the build failed.</p><div class="language-bash"><pre><code>docker-compose up -d
</code></pre></div></li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Attaching the option <strong>-d</strong> to the <strong>docker-compose up</strong> statement runs the Docker Container in Detach Mode. That fixed the error.</p></div><ol start="5"><li>Setup is completed.</li></ol>__VP_STATIC_END__`,18),s=[a];function l(r,c,p,d,u,h){return t(),o("div",null,s)}var f=e(i,[["render",l]]);export{m as __pageData,f as default};
